<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>info.bethard</groupId>
  <artifactId>timenorm</artifactId>
  <version>0.9.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Time Normalization</name>
  <description>Converts natural language expressions of dates and times to their normalized form</description>
  <url>https://github.com/bethard/timenorm/</url>
  <inceptionYear>2013</inceptionYear>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <url>https://github.com/bethard/timenorm/</url>
    <connection>scm:git:git@github.com:bethard/timenorm.git</connection>
    <developerConnection>scm:git:git@github.com:bethard/timenorm.git</developerConnection>
  </scm>
  <developers>
    <developer>
      <id>steven.bethard</id>
      <name>Steven Bethard</name>
      <email>steven.bethard@gmail.com</email>
    </developer>
  </developers>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.version.full>2.10.0</scala.version.full>
    <scala.version>2.10</scala.version>
  </properties>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version.full}</version>
    </dependency>
    <dependency>
      <groupId>org.threeten</groupId>
      <artifactId>threetenbp</artifactId>
      <version>0.8.1</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version}</artifactId>
      <version>2.0.M5b</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>no.arktekk</groupId>
      <artifactId>anti-xml_2.10</artifactId>
      <version>0.5.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.lexicalscope.jewelcli</groupId>
      <artifactId>jewelcli</artifactId>
      <version>0.8.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.timen</groupId>
      <artifactId>timen</artifactId>
      <version>1.0.8</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <!-- see http://davidb.github.com/scala-maven-plugin -->
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-deprecation</arg>
                <arg>-unchecked</arg>
                <arg>-feature</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.14.1</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
